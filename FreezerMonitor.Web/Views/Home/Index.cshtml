@model FreezerMonitor.Web.Models.SensorReadingsViewModel

@{
    ViewBag.Title = "Home Page";
}

@*<div class="jumbotron">
    <h1>ASP.NET</h1>
    <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
    <p><a href="http://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>*@

<div class="row">
    <div class="col-md-2">
        <h2>Sensors</h2>
        <ul>
            @foreach (var sensor in Model.Sensors)
            {
                <li>@sensor.Key</li>
            }
        </ul>
    </div>
    <div class="col-md-10">
        <h2>Readings</h2>
        <svg width="960" height="500"></svg>
    </div>
</div>

<script src="~/Scripts/d3/d3.js"></script>
<script>
    var svg = d3.select("svg"),
        margin = { top: 20, right: 20, bottom: 30, left: 50 },
        width = +svg.attr("width") - margin.left - margin.right,
        height = +svg.attr("height") - margin.top - margin.bottom,
        g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    var parseTime = d3.utcParse("%Y-%m-%dT%H:%M:%S.%L%Z");
        //d3.timeParse("%m/%d/%Y %I:%M:%S %p");

    // Setup Axes and Line def
    var x = d3.scaleUtc().rangeRound([0, width]);
    var y = d3.scaleLinear().rangeRound([height, 0]);
    var line = d3.line()
        .x(function (data) { return x(data.timestamp); })
        .y(function (data) { return y(data.temperature); });

    // Parse file and display
    d3.csv('@Url.Action("Log", "Home", new { id = "031685a74bff" })', function (data) {
        //console.log(data);
        data.timestamp = parseTime(data.timestamp);
        data.temperature = +data.temperature;
        return data;
    }, function (error, data) {
        if (error) throw error;

        x.domain([new Date(2017, 1, 23, 0), new Date(2017, 1, 26, 0)]);
        y.domain([-10, 85]);
        //x.domain(d3.extent(data, function (d) { return d.timestamp; }));
        //y.domain(d3.extent(data, function (d) { return d.temperature; }));

        g.append("g")
                .attr("transform", "translate(0," + height + ")")
                .call(d3.axisBottom(x))
            .select(".domain")
                .remove();

        g.append("g")
              .call(d3.axisLeft(y))
            .append("text")
              .attr("fill", "#000")
              .attr("transform", "rotate(-90)")
              .attr("y", 6)
              .attr("dy", "0.71em")
              .attr("text-anchor", "end")
              .text("Temp (F)");

        g.append("path")
            .datum(data)
            .attr("fill", "none")
            .attr("stroke", "steelblue")
            .attr("stroke-linejoin", "round")
            .attr("stroke-linecap", "round")
            .attr("stroke-width", 1.5)
            .attr("d", line);
    });

    d3.csv('@Url.Action("Log", "Home", new { id = "03168a1eedff" })', function (data) {
        console.log(data);
        data.timestamp = parseTime(data.timestamp);
        data.temperature = +data.temperature;
        return data;
    }, function (error, data) {
        if (error) throw error;

        g.append("path")
            .datum(data)
            .attr("fill", "none")
            .attr("stroke", "salmon")
            .attr("stroke-linejoin", "round")
            .attr("stroke-linecap", "round")
            .attr("stroke-width", 1.5)
            .attr("d", line);
    });
</script>