@model FreezerMonitor.Web.Models.DashboardViewModel

@{
    ViewBag.Title = "Dashboard";
}

<meta http-equiv="content-type" content="application/xhtml+xml; charset=utf-8" />
@*<h2>Dashboard</h2>*@

<h3>Last <strong>@Model.DaysInPeriod</strong> Days:</h3>

<div class="container">
    <div class="row">
        <div class="col-xs-6 kpi">
            <span class="kpi">@String.Format("{0:F1}°F", Model.MaxReading.Temperature)</span><br />
            Max
        </div>
        <div class="col-xs-6 kpi">
            <span class="kpi">@Model.MinutesAboveFreezing min</span><br />
            Above Freezing
        </div>
    </div>
    <div class="row">
        <div class="col-xs-6 kpi">
            <span class="kpi">@String.Format("{0:F1}°F", Model.LastReading.Temperature)</span><br />
            Latest
        </div>
        <div class="col-xs-6 kpi">
            <span class="kpi">@String.Format("{0:P1}", Model.PortionOfTimeAboveFreezing)</span><br />
            Above Freezing
        </div>
    </div>
</div>

@*<script src="~/Scripts/d3/d3.js"></script>
<script>
    var width,
	    height = 150,
	    outerRadius,// = Math.min(width, height) / 2,
	    innerRadius// = outerRadius * .666
    //color = d3.scale.category20()    //builtin range of colors
    ;

    width = d3.select('#maxTemp').node().offsetWidth;
    outerRadius = Math.min(width, height) / 2;
    innerRadius = outerRadius * .666;

    function maxTempViz() {
        var maxTemp = d3.select("#maxTemp")
            .append("svg:svg")
            .attr("width", width)
            .attr("height", height);
        var g = maxTemp.append("svg:g")
            .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

        var arc = d3.arc()
            .outerRadius(outerRadius)
            .innerRadius(innerRadius)
            .startAngle(0)
            .endAngle(2 * Math.PI);

        var background = g.append("path")
            //.datum({ endAngle: tau })
            .style("fill", "lightblue")
            .attr("d", arc);

        g.append("svg:text")
	     	    .attr("dy", ".35em")
	          .attr("text-anchor", "middle")
	          .text("@Model.MaxTemp\u00B0F");
    }

    function timeViz() {
        var timeTemp = d3.select("#timeTemp")
            .append("svg:svg")
            .attr("width", width)
            .attr("height", height);
        var g = timeTemp.append("svg:g")
            .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

        var arc = d3.arc()
            .outerRadius(outerRadius)
            .innerRadius(innerRadius)
            .startAngle(0)
            .endAngle(2 * Math.PI);

        var background = g.append("path")
            //.datum({ endAngle: tau })
            .style("fill", "blue")
            .attr("d", arc);

        g.append("svg:text")
	     	    .attr("dy", ".35em")
	          .attr("text-anchor", "middle")
	          .text("@Model.MinutesAboveFreezing min");
    }

    //maxTempViz();
    //timeViz();
</script>*@